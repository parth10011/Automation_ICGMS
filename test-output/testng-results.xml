<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="23" passed="19" failed="4" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[Login Successfull]]>
    </line>
    <line>
      <![CDATA[Login Successfull]]>
    </line>
    <line>
      <![CDATA[Login Successfull]]>
    </line>
    <line>
      <![CDATA[Login Successfull]]>
    </line>
    <line>
      <![CDATA[Login Successfull]]>
    </line>
    <line>
      <![CDATA[Login Successfull]]>
    </line>
    <line>
      <![CDATA[Login Successfull]]>
    </line>
    <line>
      <![CDATA[Login Successfull]]>
    </line>
    <line>
      <![CDATA[Login Successfull]]>
    </line>
    <line>
      <![CDATA[Login Successfull]]>
    </line>
    <line>
      <![CDATA[Login Successfull]]>
    </line>
    <line>
      <![CDATA[Login Successfull]]>
    </line>
    <line>
      <![CDATA[Login Successfull]]>
    </line>
    <line>
      <![CDATA[Login Successfull]]>
    </line>
    <line>
      <![CDATA[Login Successfull]]>
    </line>
    <line>
      <![CDATA[Login Successfull]]>
    </line>
    <line>
      <![CDATA[Login Successfull]]>
    </line>
    <line>
      <![CDATA[Login Successfull]]>
    </line>
    <line>
      <![CDATA[Login Successfull]]>
    </line>
    <line>
      <![CDATA[Login Successfull]]>
    </line>
    <line>
      <![CDATA[Login Successfull]]>
    </line>
    <line>
      <![CDATA[Login Successfull]]>
    </line>
    <line>
      <![CDATA[Login Successfull]]>
    </line>
  </reporter-output>
  <suite started-at="2025-02-18T15:44:09 IST" name="Suite" finished-at="2025-02-18T15:53:26 IST" duration-ms="557208">
    <groups>
    </groups>
    <test started-at="2025-02-18T15:44:09 IST" name="Test" finished-at="2025-02-18T15:53:26 IST" duration-ms="557208">
      <class name="MotorClaim._08_MotorClaim_InsurerVerification">
        <test-method is-config="true" signature="setup()[pri:0, instance:MotorClaim._08_MotorClaim_InsurerVerification@4efbca5a]" started-at="2025-02-18T15:47:22 IST" name="setup" finished-at="2025-02-18T15:47:28 IST" duration-ms="6236" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="MotorClaim_InsurerVerification()[pri:0, instance:MotorClaim._08_MotorClaim_InsurerVerification@4efbca5a]" started-at="2025-02-18T15:47:28 IST" name="MotorClaim_InsurerVerification" finished-at="2025-02-18T15:47:37 IST" duration-ms="9473" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Login Successfull]]>
            </line>
          </reporter-output>
        </test-method> <!-- MotorClaim_InsurerVerification -->
        <test-method is-config="true" signature="Logout()[pri:0, instance:MotorClaim._08_MotorClaim_InsurerVerification@4efbca5a]" started-at="2025-02-18T15:47:37 IST" name="Logout" finished-at="2025-02-18T15:47:42 IST" duration-ms="5155" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Logout -->
      </class> <!-- MotorClaim._08_MotorClaim_InsurerVerification -->
      <class name="MotorClaim._11_MotorClaim_RepairerAuthorization">
        <test-method is-config="true" signature="setup()[pri:0, instance:MotorClaim._11_MotorClaim_RepairerAuthorization@77fbd92c]" started-at="2025-02-18T15:48:28 IST" name="setup" finished-at="2025-02-18T15:48:35 IST" duration-ms="6480" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="MotorClaim_RepairerAuthorization()[pri:0, instance:MotorClaim._11_MotorClaim_RepairerAuthorization@77fbd92c]" started-at="2025-02-18T15:48:35 IST" name="MotorClaim_RepairerAuthorization" finished-at="2025-02-18T15:48:42 IST" duration-ms="6949" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Login Successfull]]>
            </line>
          </reporter-output>
        </test-method> <!-- MotorClaim_RepairerAuthorization -->
        <test-method is-config="true" signature="Logout()[pri:0, instance:MotorClaim._11_MotorClaim_RepairerAuthorization@77fbd92c]" started-at="2025-02-18T15:48:42 IST" name="Logout" finished-at="2025-02-18T15:48:46 IST" duration-ms="4862" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Logout -->
      </class> <!-- MotorClaim._11_MotorClaim_RepairerAuthorization -->
      <class name="MotorClaim._17_MotorClaim_PaymentDetails">
        <test-method is-config="true" signature="setup()[pri:0, instance:MotorClaim._17_MotorClaim_PaymentDetails@747ddf94]" started-at="2025-02-18T15:50:59 IST" name="setup" finished-at="2025-02-18T15:51:05 IST" duration-ms="6162" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="MotorClaim_PaymentDetails()[pri:0, instance:MotorClaim._17_MotorClaim_PaymentDetails@747ddf94]" started-at="2025-02-18T15:51:05 IST" name="MotorClaim_PaymentDetails" finished-at="2025-02-18T15:51:12 IST" duration-ms="6296" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Login Successfull]]>
            </line>
          </reporter-output>
        </test-method> <!-- MotorClaim_PaymentDetails -->
        <test-method is-config="true" signature="Logout()[pri:0, instance:MotorClaim._17_MotorClaim_PaymentDetails@747ddf94]" started-at="2025-02-18T15:51:12 IST" name="Logout" finished-at="2025-02-18T15:51:16 IST" duration-ms="4343" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Logout -->
      </class> <!-- MotorClaim._17_MotorClaim_PaymentDetails -->
      <class name="MotorClaim._03_MotorClaim_QualityCheck">
        <test-method is-config="true" signature="setup()[pri:0, instance:MotorClaim._03_MotorClaim_QualityCheck@6adbc9d]" started-at="2025-02-18T15:45:36 IST" name="setup" finished-at="2025-02-18T15:45:41 IST" duration-ms="4985" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="MotorClaim_QualityCheck()[pri:0, instance:MotorClaim._03_MotorClaim_QualityCheck@6adbc9d]" started-at="2025-02-18T15:45:41 IST" name="MotorClaim_QualityCheck" finished-at="2025-02-18T15:45:51 IST" duration-ms="10907" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Login Successfull]]>
            </line>
          </reporter-output>
        </test-method> <!-- MotorClaim_QualityCheck -->
        <test-method is-config="true" signature="Logout()[pri:0, instance:MotorClaim._03_MotorClaim_QualityCheck@6adbc9d]" started-at="2025-02-18T15:45:51 IST" name="Logout" finished-at="2025-02-18T15:46:00 IST" duration-ms="8121" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Logout -->
      </class> <!-- MotorClaim._03_MotorClaim_QualityCheck -->
      <class name="MotorClaim._04_MotorClaim_CustomerReview">
        <test-method is-config="true" signature="setup()[pri:0, instance:MotorClaim._04_MotorClaim_CustomerReview@4550bb58]" started-at="2025-02-18T15:46:00 IST" name="setup" finished-at="2025-02-18T15:46:06 IST" duration-ms="6080" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="MotorClaim_CustomerReview()[pri:0, instance:MotorClaim._04_MotorClaim_CustomerReview@4550bb58]" started-at="2025-02-18T15:46:06 IST" name="MotorClaim_CustomerReview" finished-at="2025-02-18T15:46:15 IST" duration-ms="9122" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Login Successfull]]>
            </line>
          </reporter-output>
        </test-method> <!-- MotorClaim_CustomerReview -->
        <test-method is-config="true" signature="Logout()[pri:0, instance:MotorClaim._04_MotorClaim_CustomerReview@4550bb58]" started-at="2025-02-18T15:46:15 IST" name="Logout" finished-at="2025-02-18T15:46:20 IST" duration-ms="5041" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Logout -->
      </class> <!-- MotorClaim._04_MotorClaim_CustomerReview -->
      <class name="MotorClaim._01_MotorClaim_InitiateNewProcess">
        <test-method is-config="true" signature="setup()[pri:0, instance:MotorClaim._01_MotorClaim_InitiateNewProcess@4466af20]" started-at="2025-02-18T15:44:09 IST" name="setup" finished-at="2025-02-18T15:44:14 IST" duration-ms="5034" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="MotorClaim_InitiateNewProcess()[pri:0, instance:MotorClaim._01_MotorClaim_InitiateNewProcess@4466af20]" started-at="2025-02-18T15:44:14 IST" name="MotorClaim_InitiateNewProcess" finished-at="2025-02-18T15:44:26 IST" duration-ms="11853" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Login Successfull]]>
            </line>
          </reporter-output>
        </test-method> <!-- MotorClaim_InitiateNewProcess -->
        <test-method is-config="true" signature="Logout()[pri:0, instance:MotorClaim._01_MotorClaim_InitiateNewProcess@4466af20]" started-at="2025-02-18T15:44:26 IST" name="Logout" finished-at="2025-02-18T15:44:32 IST" duration-ms="6457" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Logout -->
      </class> <!-- MotorClaim._01_MotorClaim_InitiateNewProcess -->
      <class name="MotorClaim._18_MotorClaim_Completion">
        <test-method is-config="true" signature="setup()[pri:0, instance:MotorClaim._18_MotorClaim_Completion@35e2d654]" started-at="2025-02-18T15:51:16 IST" name="setup" finished-at="2025-02-18T15:51:22 IST" duration-ms="5708" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="MotorClaim_Completion()[pri:0, instance:MotorClaim._18_MotorClaim_Completion@35e2d654]" started-at="2025-02-18T15:51:22 IST" name="MotorClaim_Completion" finished-at="2025-02-18T15:51:28 IST" duration-ms="6424" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Login Successfull]]>
            </line>
          </reporter-output>
        </test-method> <!-- MotorClaim_Completion -->
        <test-method is-config="true" signature="Logout()[pri:0, instance:MotorClaim._18_MotorClaim_Completion@35e2d654]" started-at="2025-02-18T15:51:28 IST" name="Logout" finished-at="2025-02-18T15:51:33 IST" duration-ms="4715" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Logout -->
      </class> <!-- MotorClaim._18_MotorClaim_Completion -->
      <class name="MotorClaim._06_MotorClaim_RepairerReport">
        <test-method is-config="true" signature="setup()[pri:0, instance:MotorClaim._06_MotorClaim_RepairerReport@223191a6]" started-at="2025-02-18T15:46:45 IST" name="setup" finished-at="2025-02-18T15:46:51 IST" duration-ms="6048" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="MotorClaim_RepairerReport()[pri:0, instance:MotorClaim._06_MotorClaim_RepairerReport@223191a6]" started-at="2025-02-18T15:46:51 IST" name="MotorClaim_RepairerReport" finished-at="2025-02-18T15:47:01 IST" duration-ms="9404" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Login Successfull]]>
            </line>
          </reporter-output>
        </test-method> <!-- MotorClaim_RepairerReport -->
        <test-method is-config="true" signature="Logout()[pri:0, instance:MotorClaim._06_MotorClaim_RepairerReport@223191a6]" started-at="2025-02-18T15:47:01 IST" name="Logout" finished-at="2025-02-18T15:47:06 IST" duration-ms="5082" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Logout -->
      </class> <!-- MotorClaim._06_MotorClaim_RepairerReport -->
      <class name="MotorClaim._12_MotorClaim_ClaimFinancerAllocation">
        <test-method is-config="true" signature="setup()[pri:0, instance:MotorClaim._12_MotorClaim_ClaimFinancerAllocation@67c27493]" started-at="2025-02-18T15:48:46 IST" name="setup" finished-at="2025-02-18T15:48:54 IST" duration-ms="7855" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="MotorClaim_ClaimFinancerAllocation()[pri:0, instance:MotorClaim._12_MotorClaim_ClaimFinancerAllocation@67c27493]" started-at="2025-02-18T15:48:54 IST" name="MotorClaim_ClaimFinancerAllocation" finished-at="2025-02-18T15:49:05 IST" duration-ms="10634" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Login Successfull]]>
            </line>
          </reporter-output>
        </test-method> <!-- MotorClaim_ClaimFinancerAllocation -->
        <test-method is-config="true" signature="Logout()[pri:0, instance:MotorClaim._12_MotorClaim_ClaimFinancerAllocation@67c27493]" started-at="2025-02-18T15:49:05 IST" name="Logout" finished-at="2025-02-18T15:49:10 IST" duration-ms="4713" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Logout -->
      </class> <!-- MotorClaim._12_MotorClaim_ClaimFinancerAllocation -->
      <class name="MotorClaim.MotorClaim_Feedback_From_All_Users">
        <test-method is-config="true" signature="setup()[pri:0, instance:MotorClaim.MotorClaim_Feedback_From_All_Users@1bd4fdd]" started-at="2025-02-18T15:51:33 IST" name="setup" finished-at="2025-02-18T15:51:39 IST" duration-ms="6055" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="MotorClaim_FeedBack_FinalCompletion()[pri:0, instance:MotorClaim.MotorClaim_Feedback_From_All_Users@1bd4fdd]" started-at="2025-02-18T15:51:39 IST" name="MotorClaim_FeedBack_FinalCompletion" finished-at="2025-02-18T15:51:44 IST" duration-ms="5044" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Login Successfull]]>
            </line>
          </reporter-output>
        </test-method> <!-- MotorClaim_FeedBack_FinalCompletion -->
        <test-method is-config="true" signature="Logout()[pri:0, instance:MotorClaim.MotorClaim_Feedback_From_All_Users@1bd4fdd]" started-at="2025-02-18T15:51:44 IST" name="Logout" finished-at="2025-02-18T15:51:51 IST" duration-ms="6837" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Logout -->
        <test-method is-config="true" signature="setup()[pri:0, instance:MotorClaim.MotorClaim_Feedback_From_All_Users@1bd4fdd]" started-at="2025-02-18T15:51:51 IST" name="setup" finished-at="2025-02-18T15:51:58 IST" duration-ms="7502" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="MotorClaim_Feedback_From_Insurer()[pri:0, instance:MotorClaim.MotorClaim_Feedback_From_All_Users@1bd4fdd]" started-at="2025-02-18T15:51:58 IST" name="MotorClaim_Feedback_From_Insurer" finished-at="2025-02-18T15:52:11 IST" duration-ms="12863" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"(//button[text()='Give Feedback'])[1]"}
  (Session info: chrome=132.0.6834.197)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.27.0', revision: 'd6e718d134'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [c469c0ff1b62ec1a305b3bbe7ca6d9e8, findElement {value=(//button[text()='Give Feedback'])[1], using=xpath}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 132.0.6834.197, chrome: {chromedriverVersion: 132.0.6834.159 (2d77d3fc445..., userDataDir: C:\Users\parth\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:63013}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:63013/devtoo..., se:cdpVersion: 132.0.6834.197, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: c469c0ff1b62ec1a305b3bbe7ca6d9e8]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"(//button[text()='Give Feedback'])[1]"}
  (Session info: chrome=132.0.6834.197)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.27.0', revision: 'd6e718d134'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [c469c0ff1b62ec1a305b3bbe7ca6d9e8, findElement {value=(//button[text()='Give Feedback'])[1], using=xpath}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 132.0.6834.197, chrome: {chromedriverVersion: 132.0.6834.159 (2d77d3fc445..., userDataDir: C:\Users\parth\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:63013}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:63013/devtoo..., se:cdpVersion: 132.0.6834.197, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: c469c0ff1b62ec1a305b3bbe7ca6d9e8
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at MotorClaim.MotorClaim_Feedback_From_All_Users.MotorClaim_Feedback_From_Insurer(MotorClaim_Feedback_From_All_Users.java:68)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
            <line>
              <![CDATA[Login Successfull]]>
            </line>
          </reporter-output>
        </test-method> <!-- MotorClaim_Feedback_From_Insurer -->
        <test-method is-config="true" signature="Logout()[pri:0, instance:MotorClaim.MotorClaim_Feedback_From_All_Users@1bd4fdd]" started-at="2025-02-18T15:52:11 IST" name="Logout" finished-at="2025-02-18T15:52:16 IST" duration-ms="4773" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Logout -->
        <test-method is-config="true" signature="setup()[pri:0, instance:MotorClaim.MotorClaim_Feedback_From_All_Users@1bd4fdd]" started-at="2025-02-18T15:52:16 IST" name="setup" finished-at="2025-02-18T15:52:20 IST" duration-ms="4598" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="MotorClaim_Feedback_From_Repairer()[pri:0, instance:MotorClaim.MotorClaim_Feedback_From_All_Users@1bd4fdd]" started-at="2025-02-18T15:52:20 IST" name="MotorClaim_Feedback_From_Repairer" finished-at="2025-02-18T15:52:33 IST" duration-ms="12797" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"(//button[text()='Give Feedback'])[1]"}
  (Session info: chrome=132.0.6834.197)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.27.0', revision: 'd6e718d134'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [fc86e74e29a920277f81478f055d33ab, findElement {value=(//button[text()='Give Feedback'])[1], using=xpath}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 132.0.6834.197, chrome: {chromedriverVersion: 132.0.6834.159 (2d77d3fc445..., userDataDir: C:\Users\parth\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:63043}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:63043/devtoo..., se:cdpVersion: 132.0.6834.197, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: fc86e74e29a920277f81478f055d33ab]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"(//button[text()='Give Feedback'])[1]"}
  (Session info: chrome=132.0.6834.197)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.27.0', revision: 'd6e718d134'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [fc86e74e29a920277f81478f055d33ab, findElement {value=(//button[text()='Give Feedback'])[1], using=xpath}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 132.0.6834.197, chrome: {chromedriverVersion: 132.0.6834.159 (2d77d3fc445..., userDataDir: C:\Users\parth\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:63043}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:63043/devtoo..., se:cdpVersion: 132.0.6834.197, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: fc86e74e29a920277f81478f055d33ab
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at MotorClaim.MotorClaim_Feedback_From_All_Users.MotorClaim_Feedback_From_Repairer(MotorClaim_Feedback_From_All_Users.java:108)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
            <line>
              <![CDATA[Login Successfull]]>
            </line>
          </reporter-output>
        </test-method> <!-- MotorClaim_Feedback_From_Repairer -->
        <test-method is-config="true" signature="Logout()[pri:0, instance:MotorClaim.MotorClaim_Feedback_From_All_Users@1bd4fdd]" started-at="2025-02-18T15:52:33 IST" name="Logout" finished-at="2025-02-18T15:52:38 IST" duration-ms="4849" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Logout -->
        <test-method is-config="true" signature="setup()[pri:0, instance:MotorClaim.MotorClaim_Feedback_From_All_Users@1bd4fdd]" started-at="2025-02-18T15:52:38 IST" name="setup" finished-at="2025-02-18T15:52:43 IST" duration-ms="4823" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="MotorClaim_Feedback_From_Surveyor()[pri:0, instance:MotorClaim.MotorClaim_Feedback_From_All_Users@1bd4fdd]" started-at="2025-02-18T15:52:43 IST" name="MotorClaim_Feedback_From_Surveyor" finished-at="2025-02-18T15:52:56 IST" duration-ms="12732" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"(//button[text()='Give Feedback'])[1]"}
  (Session info: chrome=132.0.6834.197)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.27.0', revision: 'd6e718d134'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [e4ad6da9b6df8ff3a8e5027040d0ab05, findElement {value=(//button[text()='Give Feedback'])[1], using=xpath}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 132.0.6834.197, chrome: {chromedriverVersion: 132.0.6834.159 (2d77d3fc445..., userDataDir: C:\Users\parth\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:63074}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:63074/devtoo..., se:cdpVersion: 132.0.6834.197, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: e4ad6da9b6df8ff3a8e5027040d0ab05]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"(//button[text()='Give Feedback'])[1]"}
  (Session info: chrome=132.0.6834.197)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.27.0', revision: 'd6e718d134'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [e4ad6da9b6df8ff3a8e5027040d0ab05, findElement {value=(//button[text()='Give Feedback'])[1], using=xpath}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 132.0.6834.197, chrome: {chromedriverVersion: 132.0.6834.159 (2d77d3fc445..., userDataDir: C:\Users\parth\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:63074}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:63074/devtoo..., se:cdpVersion: 132.0.6834.197, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: e4ad6da9b6df8ff3a8e5027040d0ab05
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at MotorClaim.MotorClaim_Feedback_From_All_Users.MotorClaim_Feedback_From_Surveyor(MotorClaim_Feedback_From_All_Users.java:148)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
            <line>
              <![CDATA[Login Successfull]]>
            </line>
          </reporter-output>
        </test-method> <!-- MotorClaim_Feedback_From_Surveyor -->
        <test-method is-config="true" signature="Logout()[pri:0, instance:MotorClaim.MotorClaim_Feedback_From_All_Users@1bd4fdd]" started-at="2025-02-18T15:52:56 IST" name="Logout" finished-at="2025-02-18T15:53:01 IST" duration-ms="5648" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Logout -->
        <test-method is-config="true" signature="setup()[pri:0, instance:MotorClaim.MotorClaim_Feedback_From_All_Users@1bd4fdd]" started-at="2025-02-18T15:53:01 IST" name="setup" finished-at="2025-02-18T15:53:09 IST" duration-ms="7400" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="MotorClaim_Feedback_From_Customer()[pri:1, instance:MotorClaim.MotorClaim_Feedback_From_All_Users@1bd4fdd]" started-at="2025-02-18T15:53:09 IST" name="MotorClaim_Feedback_From_Customer" finished-at="2025-02-18T15:53:21 IST" duration-ms="12431" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"(//button[text()='Give Feedback'])[1]"}
  (Session info: chrome=132.0.6834.197)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.27.0', revision: 'd6e718d134'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [4aaa32638f0a12f8400001bdf7a8a300, findElement {value=(//button[text()='Give Feedback'])[1], using=xpath}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 132.0.6834.197, chrome: {chromedriverVersion: 132.0.6834.159 (2d77d3fc445..., userDataDir: C:\Users\parth\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:63106}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:63106/devtoo..., se:cdpVersion: 132.0.6834.197, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 4aaa32638f0a12f8400001bdf7a8a300]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"(//button[text()='Give Feedback'])[1]"}
  (Session info: chrome=132.0.6834.197)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.27.0', revision: 'd6e718d134'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [4aaa32638f0a12f8400001bdf7a8a300, findElement {value=(//button[text()='Give Feedback'])[1], using=xpath}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 132.0.6834.197, chrome: {chromedriverVersion: 132.0.6834.159 (2d77d3fc445..., userDataDir: C:\Users\parth\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:63106}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:63106/devtoo..., se:cdpVersion: 132.0.6834.197, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 4aaa32638f0a12f8400001bdf7a8a300
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at MotorClaim.MotorClaim_Feedback_From_All_Users.MotorClaim_Feedback_From_Customer(MotorClaim_Feedback_From_All_Users.java:32)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
            <line>
              <![CDATA[Login Successfull]]>
            </line>
          </reporter-output>
        </test-method> <!-- MotorClaim_Feedback_From_Customer -->
        <test-method is-config="true" signature="Logout()[pri:0, instance:MotorClaim.MotorClaim_Feedback_From_All_Users@1bd4fdd]" started-at="2025-02-18T15:53:21 IST" name="Logout" finished-at="2025-02-18T15:53:26 IST" duration-ms="4654" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Logout -->
      </class> <!-- MotorClaim.MotorClaim_Feedback_From_All_Users -->
      <class name="MotorClaim._02_MotorClaim_ClaimFormSubmission">
        <test-method is-config="true" signature="setup()[pri:0, instance:MotorClaim._02_MotorClaim_ClaimFormSubmission@c8c12ac]" started-at="2025-02-18T15:44:32 IST" name="setup" finished-at="2025-02-18T15:44:36 IST" duration-ms="4445" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="MotorClaim_ClaimFormSubmission()[pri:0, instance:MotorClaim._02_MotorClaim_ClaimFormSubmission@c8c12ac]" started-at="2025-02-18T15:44:36 IST" name="MotorClaim_ClaimFormSubmission" finished-at="2025-02-18T15:45:30 IST" duration-ms="53922" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Login Successfull]]>
            </line>
          </reporter-output>
        </test-method> <!-- MotorClaim_ClaimFormSubmission -->
        <test-method is-config="true" signature="Logout()[pri:0, instance:MotorClaim._02_MotorClaim_ClaimFormSubmission@c8c12ac]" started-at="2025-02-18T15:45:30 IST" name="Logout" finished-at="2025-02-18T15:45:36 IST" duration-ms="5195" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Logout -->
      </class> <!-- MotorClaim._02_MotorClaim_ClaimFormSubmission -->
      <class name="MotorClaim._15_MotorClaim_SurveyorFees">
        <test-method is-config="true" signature="setup()[pri:0, instance:MotorClaim._15_MotorClaim_SurveyorFees@5b8dfcc1]" started-at="2025-02-18T15:50:03 IST" name="setup" finished-at="2025-02-18T15:50:09 IST" duration-ms="6704" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="MotorClaim_SurvyeorFees()[pri:0, instance:MotorClaim._15_MotorClaim_SurveyorFees@5b8dfcc1]" started-at="2025-02-18T15:50:09 IST" name="MotorClaim_SurvyeorFees" finished-at="2025-02-18T15:50:20 IST" duration-ms="10421" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Login Successfull]]>
            </line>
          </reporter-output>
        </test-method> <!-- MotorClaim_SurvyeorFees -->
        <test-method is-config="true" signature="Logout()[pri:0, instance:MotorClaim._15_MotorClaim_SurveyorFees@5b8dfcc1]" started-at="2025-02-18T15:50:20 IST" name="Logout" finished-at="2025-02-18T15:50:25 IST" duration-ms="5614" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Logout -->
      </class> <!-- MotorClaim._15_MotorClaim_SurveyorFees -->
      <class name="MotorClaim._16_MotorClaim_BillVerification">
        <test-method is-config="true" signature="setup()[pri:0, instance:MotorClaim._16_MotorClaim_BillVerification@2f9f7dcf]" started-at="2025-02-18T15:50:25 IST" name="setup" finished-at="2025-02-18T15:50:31 IST" duration-ms="5843" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="MotorClaim_BillVerification()[pri:0, instance:MotorClaim._16_MotorClaim_BillVerification@2f9f7dcf]" started-at="2025-02-18T15:50:31 IST" name="MotorClaim_BillVerification" finished-at="2025-02-18T15:50:54 IST" duration-ms="22947" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Login Successfull]]>
            </line>
          </reporter-output>
        </test-method> <!-- MotorClaim_BillVerification -->
        <test-method is-config="true" signature="Logout()[pri:0, instance:MotorClaim._16_MotorClaim_BillVerification@2f9f7dcf]" started-at="2025-02-18T15:50:54 IST" name="Logout" finished-at="2025-02-18T15:50:59 IST" duration-ms="4852" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Logout -->
      </class> <!-- MotorClaim._16_MotorClaim_BillVerification -->
      <class name="MotorClaim._09_MotorClaim_SurveyorAppointment">
        <test-method is-config="true" signature="setup()[pri:0, instance:MotorClaim._09_MotorClaim_SurveyorAppointment@1b7cc17c]" started-at="2025-02-18T15:47:42 IST" name="setup" finished-at="2025-02-18T15:47:48 IST" duration-ms="5519" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="MotorClaim_SurveyorAppointment()[pri:0, instance:MotorClaim._09_MotorClaim_SurveyorAppointment@1b7cc17c]" started-at="2025-02-18T15:47:48 IST" name="MotorClaim_SurveyorAppointment" finished-at="2025-02-18T15:48:04 IST" duration-ms="15744" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Login Successfull]]>
            </line>
          </reporter-output>
        </test-method> <!-- MotorClaim_SurveyorAppointment -->
        <test-method is-config="true" signature="Logout()[pri:0, instance:MotorClaim._09_MotorClaim_SurveyorAppointment@1b7cc17c]" started-at="2025-02-18T15:48:04 IST" name="Logout" finished-at="2025-02-18T15:48:09 IST" duration-ms="4944" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Logout -->
      </class> <!-- MotorClaim._09_MotorClaim_SurveyorAppointment -->
      <class name="MotorClaim._10_MotorClaim_SurveyorReport">
        <test-method is-config="true" signature="setup()[pri:0, instance:MotorClaim._10_MotorClaim_SurveyorReport@59662a0b]" started-at="2025-02-18T15:48:09 IST" name="setup" finished-at="2025-02-18T15:48:16 IST" duration-ms="6955" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="MotorClaim_SurveyorReport()[pri:0, instance:MotorClaim._10_MotorClaim_SurveyorReport@59662a0b]" started-at="2025-02-18T15:48:16 IST" name="MotorClaim_SurveyorReport" finished-at="2025-02-18T15:48:23 IST" duration-ms="7686" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Login Successfull]]>
            </line>
          </reporter-output>
        </test-method> <!-- MotorClaim_SurveyorReport -->
        <test-method is-config="true" signature="Logout()[pri:0, instance:MotorClaim._10_MotorClaim_SurveyorReport@59662a0b]" started-at="2025-02-18T15:48:23 IST" name="Logout" finished-at="2025-02-18T15:48:28 IST" duration-ms="4847" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Logout -->
      </class> <!-- MotorClaim._10_MotorClaim_SurveyorReport -->
      <class name="MotorClaim._14_MotorClaim_FinalReport">
        <test-method is-config="true" signature="setup()[pri:0, instance:MotorClaim._14_MotorClaim_FinalReport@72967906]" started-at="2025-02-18T15:49:38 IST" name="setup" finished-at="2025-02-18T15:49:43 IST" duration-ms="5005" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="MotorClaim_FinalReport()[pri:0, instance:MotorClaim._14_MotorClaim_FinalReport@72967906]" started-at="2025-02-18T15:49:43 IST" name="MotorClaim_FinalReport" finished-at="2025-02-18T15:49:58 IST" duration-ms="14634" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Login Successfull]]>
            </line>
          </reporter-output>
        </test-method> <!-- MotorClaim_FinalReport -->
        <test-method is-config="true" signature="Logout()[pri:0, instance:MotorClaim._14_MotorClaim_FinalReport@72967906]" started-at="2025-02-18T15:49:58 IST" name="Logout" finished-at="2025-02-18T15:50:03 IST" duration-ms="4846" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Logout -->
      </class> <!-- MotorClaim._14_MotorClaim_FinalReport -->
      <class name="MotorClaim._13_MotorClaim_RepairerProgress">
        <test-method is-config="true" signature="setup()[pri:0, instance:MotorClaim._13_MotorClaim_RepairerProgress@1a482e36]" started-at="2025-02-18T15:49:10 IST" name="setup" finished-at="2025-02-18T15:49:18 IST" duration-ms="7921" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="MotorClaim_RepairerProgress()[pri:0, instance:MotorClaim._13_MotorClaim_RepairerProgress@1a482e36]" started-at="2025-02-18T15:49:18 IST" name="MotorClaim_RepairerProgress" finished-at="2025-02-18T15:49:33 IST" duration-ms="15629" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Login Successfull]]>
            </line>
          </reporter-output>
        </test-method> <!-- MotorClaim_RepairerProgress -->
        <test-method is-config="true" signature="Logout()[pri:0, instance:MotorClaim._13_MotorClaim_RepairerProgress@1a482e36]" started-at="2025-02-18T15:49:33 IST" name="Logout" finished-at="2025-02-18T15:49:38 IST" duration-ms="5105" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Logout -->
      </class> <!-- MotorClaim._13_MotorClaim_RepairerProgress -->
      <class name="MotorClaim._07_MotorClaim_QCApproval">
        <test-method is-config="true" signature="setup()[pri:0, instance:MotorClaim._07_MotorClaim_QCApproval@49139829]" started-at="2025-02-18T15:47:06 IST" name="setup" finished-at="2025-02-18T15:47:10 IST" duration-ms="4145" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="MotorClaim_QCApproval()[pri:0, instance:MotorClaim._07_MotorClaim_QCApproval@49139829]" started-at="2025-02-18T15:47:10 IST" name="MotorClaim_QCApproval" finished-at="2025-02-18T15:47:16 IST" duration-ms="5985" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Login Successfull]]>
            </line>
          </reporter-output>
        </test-method> <!-- MotorClaim_QCApproval -->
        <test-method is-config="true" signature="Logout()[pri:0, instance:MotorClaim._07_MotorClaim_QCApproval@49139829]" started-at="2025-02-18T15:47:16 IST" name="Logout" finished-at="2025-02-18T15:47:22 IST" duration-ms="5682" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Logout -->
      </class> <!-- MotorClaim._07_MotorClaim_QCApproval -->
      <class name="MotorClaim._05_MotorClaim_RepairerAppointment">
        <test-method is-config="true" signature="setup()[pri:0, instance:MotorClaim._05_MotorClaim_RepairerAppointment@4ec4f3a0]" started-at="2025-02-18T15:46:20 IST" name="setup" finished-at="2025-02-18T15:46:24 IST" duration-ms="4629" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="MotorClaim_RepairerAppointment()[pri:0, instance:MotorClaim._05_MotorClaim_RepairerAppointment@4ec4f3a0]" started-at="2025-02-18T15:46:24 IST" name="MotorClaim_RepairerAppointment" finished-at="2025-02-18T15:46:41 IST" duration-ms="16220" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Login Successfull]]>
            </line>
          </reporter-output>
        </test-method> <!-- MotorClaim_RepairerAppointment -->
        <test-method is-config="true" signature="Logout()[pri:0, instance:MotorClaim._05_MotorClaim_RepairerAppointment@4ec4f3a0]" started-at="2025-02-18T15:46:41 IST" name="Logout" finished-at="2025-02-18T15:46:45 IST" duration-ms="4551" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Logout -->
      </class> <!-- MotorClaim._05_MotorClaim_RepairerAppointment -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
